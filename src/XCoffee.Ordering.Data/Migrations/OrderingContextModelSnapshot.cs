// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XCoffee.Ordering.Data.Context;

namespace XCoffee.Ordering.Data.Migrations
{
    [DbContext(typeof(OrderingContext))]
    partial class OrderingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("XCoffee.Ordering.Domain.AggregatesModel.OrderAggregate.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("NUMERIC(8,2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("NUMERIC(8,2)");

                    b.Property<decimal>("AmountPayBack")
                        .HasColumnType("NUMERIC(8,2)");

                    b.Property<int>("TotalItems")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Orders","dbo");
                });

            modelBuilder.Entity("XCoffee.Ordering.Domain.AggregatesModel.OrderAggregate.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("NUMERIC(8,2)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("NUMERIC(8,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems","dbo");
                });

            modelBuilder.Entity("XCoffee.Ordering.Domain.AggregatesModel.ProductAggregate.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(70)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<decimal>("Price")
                        .HasColumnType("NUMERIC(8,2)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.HasKey("Id");

                    b.ToTable("Products","dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22865e17-adb2-4f15-9e35-afb2d3bac296"),
                            Description = "Café, chocolate, leite vaporizado e finalizado com chantilly.",
                            Name = "Mocha",
                            Price = 4.0m,
                            Thumbnail = "coffee_2.png"
                        },
                        new
                        {
                            Id = new Guid("25855ff4-b3dd-46be-aef0-689b44319ff2"),
                            Description = "Bebida italiana preparada com café expresso e leite.",
                            Name = "Cappuccino",
                            Price = 3.5m,
                            Thumbnail = "coffee_1.png"
                        },
                        new
                        {
                            Id = new Guid("949905d3-99ca-4d3a-a3f7-4c88d3132abc"),
                            Description = "Bebida matinal mais consumida no mundo.",
                            Name = "Café com Leite",
                            Price = 3.0m,
                            Thumbnail = "coffee_3.png"
                        });
                });

            modelBuilder.Entity("XCoffee.Ordering.Domain.AggregatesModel.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("XCoffee.Ordering.Domain.AggregatesModel.OrderAggregate.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("XCoffee.Ordering.Domain.AggregatesModel.ProductAggregate.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
